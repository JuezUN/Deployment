#!/bin/bash
set -e

function automatic_backup() {
  dt=$(date '+%d-%m-%Y-%H.%M.%S')
  create_backup $dt

  echo -e "\nUploading backups to remote...\n"
  gdrive upload $(ls *.tar.gz)

  previous_backup=$(cat ~/dbBackupID)
  rm -f ~/dbBackupID
  backupsIds=$(gdrive list --no-header | cut -d ' ' -f1)
  # Get the last backed up file
  echo $(echo $backupsIds | cut -d ' ' -f1) > ~/dbBackupID
  rm -rf *

  [ ! -z "$previous_backup" ] && gdrive delete $previous_backup
  echo -e "\nBackup uploaded successfully"
}

function manual_backup() {
  create_backup $1
  echo -e "\nUploading backups to remote...\n"
  gdrive upload $(ls *.tar.gz)

  rm -rf *
  echo -e "\nBackup uploaded successfully"
}

function create_backup() {
  echo -e "\nCreating backup...\n"

  rm -rf *
  mongodump -d INGInious -o copyData

  echo -e "Compressing DB to $1.tar.gz"
  tar -zcvf "$1.tar.gz" copyData

  echo -e "\nBackup created successfully"
}

function restore_backup() {
  id=""
  if [ -z "$1" ]; then
    id=$(cat ~/dbBackupID)
  else
    id=$1
  fi

  echo -e "\nRestoring backup from id: $id"
  gdrive download $id
  tar -zxvf *.tar.gz

  mongorestore --db INGInious copyData/INGInious/

  rm -rf *
  echo -e "\nBackup restored successfully"
}

manual_backup_name=""
manual_restore_id=""
is_automatic_backup=false

while getopts "am:i:" opt; do
  case $opt in
  a)
    is_automatic_backup=true
    ;;
  m)
    manual_backup_name=$OPTARG
    ;;
  i)
    manual_restore_id=$OPTARG
    ;;
  :)
    echo "Option -$OPTARG requires an argument" >&2
    exit 1
    ;;
  \?)
    echo "Invalid option -$OPTARG" >&2
    exit 1
    ;;
  esac
done

shift $((OPTIND - 1))

if [ "$1" == "create" ]; then
  if [ "$is_automatic_backup" = true ]; then
    echo -e "\nCreating automatic backup"
    automatic_backup
    echo -e "\nAutomatic backup created successfully"
  else
    echo -e "\nCreating manual backup"
    manual_backup $manual_backup_name
    echo -e "\nManual backup created successfully"
  fi
elif [ "$1" == "restore" ]; then
  if [ "$is_automatic_backup" = true ]; then
    restore_backup
  else
    restore_backup $is_automatic_backup
  fi
else
  echo -e "Usage:\nuncode_database_backup (-a or -m) create\nuncode_database_backup (-a or -i <id>) restore"
fi
